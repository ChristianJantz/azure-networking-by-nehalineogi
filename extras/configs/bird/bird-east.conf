# This is a minimal configuration file, which allows the bird daemon to start
# but will not cause anything else to happen.
#
# Please refer to the documentation in the bird-doc package or BIRD User's
# Guide on http://bird.network.cz/ for more information on configuring BIRD and
# adding routing protocols.

# Change this into your BIRD router ID. It's a world-wide unique identification
# of your router, usually one of router's IPv4 addresses.
log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };
log stderr all;
#
#
router id  172.16.25.4;

# The Kernel protocol is not a real routing protocol. Instead of communicating
# with other routers in the network, it performs synchronization of BIRD's
# routing tables with the OS kernel.
protocol kernel {
	scan time 60;
	import none;
	export all;   # Actually insert routes into the kernel routing table
}
#protocol direct {
#  disabled;
#}

# 172.16.201.5, 172.16.201.4
protocol static {
  route 172.16.201.4/32 via 172.16.25.1;
  route 172.16.201.5/32 via 172.16.25.1;
  route 11.11.11.11/32 via 172.16.25.1;
  route 192.168.100.2/32 via "vxlan-demo";
# route 0.0.0.0/0 via 172.16.25.1;
  route 128.0.0.0/1 via 172.16.25.1;
  route 0.0.0.0/1 via 172.16.25.1;
# route 10.100.220.0/24 via 172.16.25.1;
# route 10.9.1.0/24 via 172.16.25.1;
#  route 10.0.0.0/8 via 172.16.25.1;

}

# The Device protocol is not a real routing protocol. It doesn't generate any
# routes and it only serves as a module for getting information about network
# interfaces from the kernel. 
protocol device {
	scan time 60;
}

template bgp PEERS {
  local as 65001;
  multihop;
  import all;
  export all;
}
filter from_routeserver {
  bgp_path.empty;
  bgp_path.prepend(65001);
  accept;
}
filter to_routeserver {
  # Drop long prefixes
  if ( net ~ [ 0.0.0.0/0{30,32} ] ) then { reject; }
  else accept;
}
# connection to route11 through vxlan
protocol bgp vxlan from PEERS {
  neighbor 192.168.100.2 as 65002;
}

# connection to route server IP 1
# 172.16.201.5, 172.16.201.4
protocol bgp routeserver1 from PEERS {
  neighbor 172.16.201.4 as 65515;
#  import filter from_routeserver;
#  export filter to_routeserver;
}

# connection to route server IP 2
protocol bgp routeserver2 from PEERS {
  neighbor 172.16.201.5 as 65515;
#  import filter from_routeserver;
#  export filter to_routeserver;
}

